apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
  creationTimestamp: 2018-05-04T07:29:25Z
  generation: 8
  labels:
    app: fixmyberlin
  name: fixmyberlin
  namespace: default
  resourceVersion: "233981"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/fixmyberlin
  uid: df24e433-4f6c-11e8-949d-42010a9c0078
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fixmyberlin
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fixmyberlin
    spec:
      containers:
      - command:
        - gunicorn
        - --bind
        - 0.0.0.0:8080
        - fixmydjango.wsgi:application
        env:
        - name: DATABASE_NAME
          value: fixmyberlin
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: cloudsql
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: cloudsql
        image: gcr.io/fixmyberlin-201008/fixmyberlin:0.4
        imagePullPolicy: Always
        name: fixmyberlin-app
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /cloud_sql_proxy
        - --dir=/cloudsql
        - -instances=fixmyberlin-201008:europe-west3:fixmyberlin-instance=tcp:5432
        - -credential_file=/secrets/cloudsql/service_account.json
        image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
        imagePullPolicy: IfNotPresent
        name: cloudsql-proxy
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /secrets/cloudsql
          name: cloudsql-oauth-credentials
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ssl-certs
        - mountPath: /cloudsql
          name: cloudsql
      dnsPolicy: ClusterFirst
      hostAliases:
      - hostnames:
        - db
        ip: 127.0.0.1
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cloudsql-oauth-credentials
        secret:
          defaultMode: 420
          secretName: cloudsql-oauth-credentials
      - hostPath:
          path: /etc/ssl/certs
          type: ""
        name: ssl-certs
      - emptyDir: {}
        name: cloudsql
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: 2018-05-04T08:42:21Z
    lastUpdateTime: 2018-05-04T08:42:21Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 8
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
